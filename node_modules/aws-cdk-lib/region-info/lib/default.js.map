{
  "version": 3,
  "sources": ["default.ts"],
  "sourcesContent": ["import { before, RULE_SSM_PRINCIPALS_ARE_REGIONAL } from './aws-entities';\n\n                                                                           \nexport class Default {\n\n                                                                                                                                                                                                      \n  public static readonly VPC_ENDPOINT_SERVICE_NAME_PREFIX = 'com.amazonaws.vpce';\n\nn  public static servicePrincipal(serviceFqn: string, region: string, urlSuffix: string): string {\n    const service = extractSimpleName(serviceFqn);\n    if (!service) {\n      // Return \"service\" if it does not look like any of the following:\n      // - s3\n      // - s3.amazonaws.com\n      // - s3.amazonaws.com.cn\n      // - s3.c2s.ic.gov\n      // - s3.sc2s.sgov.gov\n      return serviceFqn;\n    }\n\n    // Exceptions for Service Principals in us-iso-*\n    const US_ISO_EXCEPTIONS = new Set([\n      'cloudhsm',\n      'config',\n      'states',\n      'workspaces',\n    ]);\n\n    // Account for idiosyncratic Service Principals in `us-iso-*` regions\n    if (region.startsWith('us-iso-') && US_ISO_EXCEPTIONS.has(service)) {\n      switch (service) {\n        // Services with universal principal\n        case ('states'):\n          return `${service}.amazonaws.com`;\n\n        // Services with a partitional principal\n        default:\n          return `${service}.${urlSuffix}`;\n      }\n    }\n\n    // Exceptions for Service Principals in us-isob-*\n    const US_ISOB_EXCEPTIONS = new Set([\n      'dms',\n      'states',\n    ]);\n\n    // Account for idiosyncratic Service Principals in `us-isob-*` regions\n    if (region.startsWith('us-isob-') && US_ISOB_EXCEPTIONS.has(service)) {\n      switch (service) {\n        // Services with universal principal\n        case ('states'):\n          return `${service}.amazonaws.com`;\n\n        // Services with a partitional principal\n        default:\n          return `${service}.${urlSuffix}`;\n      }\n    }\n\n    // SSM turned from global to regional at some point\n    if (service === 'ssm') {\n      return before(region, RULE_SSM_PRINCIPALS_ARE_REGIONAL)\n        ? `${service}.amazonaws.com`\n        : `${service}.${region}.amazonaws.com`;\n    }\n\n    switch (service) {\n      // Services with a regional AND partitional principal\n      case 'codedeploy':\n      case 'logs':\n        return `${service}.${region}.${urlSuffix}`;\n\n      // Services with a regional principal\n      case 'states':\n        return `${service}.${region}.amazonaws.com`;\n\n      // Services with a partitional principal\n      case 'ec2':\n        return `${service}.${urlSuffix}`;\n\n      // Services with a universal principal across all regions/partitions (the default case)\n      default:\n        return `${service}.amazonaws.com`;\n\n    }\n  }\n\n  private constructor() { }\n}\n\nfunction extractSimpleName(serviceFqn: string) {\n  const matches = serviceFqn.match(/^([^.]+)(?:(?:\\.amazonaws\\.com(?:\\.cn)?)|(?:\\.c2s\\.ic\\.gov)|(?:\\.sc2s\\.sgov\\.gov))?$/);\n  return matches ? matches[1] : undefined;\n}"],
  "mappings": "mJAAA,eAAA,QAAA,kBAGA,aAAoB,CAsFlB,aAAA,QAhFc,kBAAiB,WAAoB,OAAgB,UAAiB,CAClF,KAAM,SAAU,kBAAkB,YAClC,GAAI,CAAC,QAOH,MAAO,YAIT,KAAM,mBAAoB,GAAI,KAAI,CAChC,WACA,SACA,SACA,eAIF,GAAI,OAAO,WAAW,YAAc,kBAAkB,IAAI,SACxD,OAAQ,aAEA,SACJ,MAAO,GAAG,gCAIV,MAAO,GAAG,WAAW,YAK3B,KAAM,oBAAqB,GAAI,KAAI,CACjC,MACA,WAIF,GAAI,OAAO,WAAW,aAAe,mBAAmB,IAAI,SAC1D,OAAQ,aAEA,SACJ,MAAO,GAAG,gCAIV,MAAO,GAAG,WAAW,YAK3B,GAAI,UAAY,MACd,MAAO,gBAAA,OAAO,OAAQ,eAAA,kCAClB,GAAG,wBACH,GAAG,WAAW,uBAGpB,OAAQ,aAED,iBACA,OACH,MAAO,GAAG,WAAW,UAAU,gBAG5B,SACH,MAAO,GAAG,WAAW,2BAGlB,MACH,MAAO,GAAG,WAAW,oBAIrB,MAAO,GAAG,0BAjFlB,QAAA,QAAA,kGAGyB,QAAA,iCAAmC,qBAsF5D,2BAA2B,WAAkB,CAC3C,KAAM,SAAU,WAAW,MAAM,wFACjC,MAAO,SAAU,QAAQ,GAAK",
  "names": []
}
